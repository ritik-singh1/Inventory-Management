# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window_5.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pyodbc

conn = pyodbc.connect('DRIVER={SQL SERVER};SERVER=LAPTOP-F8010458\SQLEXPRESS;DATABASE=warehouse;Trusted_connection=yes')

class Ui_window_5(object):
    def setupUi(self, window_5):
        window_5.setObjectName("window_5")
        window_5.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(window_5)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(200, 10, 251, 51))
        font = QtGui.QFont()
        font.setFamily("Monotype Corsiva")
        font.setPointSize(20)
        font.setItalic(True)
        font.setUnderline(True)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(30, 90, 400, 300))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        self.tableWidget.setHorizontalHeaderLabels(["Items", "Qty", "Price", "Total Amount"])

        self.x1 = self.loaddata()

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(450, 200, 161, 51))
        font = QtGui.QFont()
        font.setFamily("Monotype Corsiva")
        font.setPointSize(20)
        font.setItalic(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(680, 200, 131, 51))
        
        font = QtGui.QFont()
        font.setFamily("Monotype Corsiva")
        font.setPointSize(20)
        font.setItalic(True)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        window_5.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(window_5)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        window_5.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(window_5)
        self.statusbar.setObjectName("statusbar")
        window_5.setStatusBar(self.statusbar)
        self.retranslateUi(window_5, self.x1)
        QtCore.QMetaObject.connectSlotsByName(window_5)

    def retranslateUi(self, window_5, total):
        _translate = QtCore.QCoreApplication.translate
        window_5.setWindowTitle(_translate("window_5", "Cart"))
        self.label.setText(_translate("window_5", "Your Cart Looks Like"))
        self.label.adjustSize()
        self.label_2.setText(_translate("window_5", "Total Amount :"))
        self.label_2.adjustSize()
        self.label_3.setText(_translate("window_5", str(total)))

    def loaddata(self):
        cursor = conn.cursor()
        cursor.execute('select Items, Qty, Price, Total_Amount from cart')
        tableindex = 0
        total = 0
        self.tableWidget.setRowCount(tableindex+1)
        for row in cursor:
            total += row[3]
            self.tableWidget.setRowCount(tableindex+1)
            self.tableWidget.setItem(tableindex, 0, QtWidgets.QTableWidgetItem(str(row[0])))
            self.tableWidget.setItem(tableindex, 1, QtWidgets.QTableWidgetItem(str(row[1])))
            self.tableWidget.setItem(tableindex, 2, QtWidgets.QTableWidgetItem(str(row[2])))
            self.tableWidget.setItem(tableindex, 3, QtWidgets.QTableWidgetItem(str(row[3])))
            tableindex += 1
        return total
        

        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    window_5 = QtWidgets.QMainWindow()
    ui = Ui_window_5()
    ui.setupUi(window_5)
    window_5.show()
    sys.exit(app.exec_())
